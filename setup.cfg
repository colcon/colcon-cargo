[metadata]
name = colcon-cargo
version = attr: colcon_cargo.__version__
author = GÃ©rald Lelong
author_email = gerald.lelong@easymov.fr
maintainer = Easymov Robotics
maintainer_email = dev@easymov.fr
classifiers =
    Development Status :: 3 - Alpha
    Environment :: Plugins
    Intended Audience :: Developers
    License :: OSI Approved :: Apache Software License
    Operating System :: MacOS
    Operating System :: Microsoft :: Windows
    Operating System :: POSIX
    Programming Language :: Python
    Topic :: Software Development :: Build Tools
license = Apache License, Version 2.0
description = Extension for colcon to support cargo packages.
long_description = file: README.md
long_description_content_type = text/markdown
keywords = colcon

[options]
python_requires = >=3.6
install_requires =
  colcon-core
  toml
packages = find:
zip_safe = true

[options.extras_require]
test =
  flake8>=3.6.0
  flake8-blind-except
  flake8-builtins
  flake8-class-newline
  flake8-comprehensions
  flake8-deprecated
  flake8-docstrings
  flake8-import-order
  flake8-quotes
  pep8-naming
  pylint
  pytest
  pytest-cov
  scspell3k>=2.2

[tool:pytest]
filterwarnings =
    error
    # Suppress deprecation warnings in other packages
    ignore:lib2to3 package is deprecated::scspell
    ignore:pkg_resources is deprecated as an API::flake8_import_order
    ignore:SelectableGroups dict interface is deprecated::flake8
    ignore:Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated::pyreadline
    ignore:the imp module is deprecated in favour of importlib.*:DeprecationWarning
    ignore:the imp module is deprecated in favour of importlib.*:PendingDeprecationWarning
junit_suite_name = colcon-cargo

[options.entry_points]
colcon_argcomplete.argcomplete_completer =
    cargo_args = colcon_cargo.argcomplete_completer.cargo_args:CargoArgcompleteCompleter
colcon_core.package_identification =
    cargo = colcon_cargo.package_identification.cargo:CargoPackageIdentification
colcon_core.task.build =
    cargo = colcon_cargo.task.cargo.build:CargoBuildTask
colcon_core.task.test =
    cargo = colcon_cargo.task.cargo.test:CargoTestTask

[flake8]
import-order-style = google

[coverage:run]
source = colcon_cargo
